#虚拟主机
server {

	#监听的IP和端口
    listen       80;
	
	#主机名称
    server_name  www.king.org;

    #charset koi8-r;
	
	#访问日志文件存放路径
    #access_log  /var/log/nginx/log/host.access.log  main;
		
	location ~ \.(gif|jpg|png)$ {
	    #设置哪个缓存区将被使用，img是缓存区的名称，对应proxy_cache_path
	    #proxy_cache img;

	    #设置缓存哪些HTTP方法,默认缓存HTTP GET/HEAD方法，不缓存HTTP POST方法
	    #proxy_cacha_methods GET

	    #设置缓存的最小使用次数
	    #proxy_cache_min_uses 1;

	    #对不同返回状态码的URL设置不同的缓存时间
	    #proxy_cache_valid 200 302 10m;
	    #proxy_cache_valid 404 1m;
	    #proxy_cache_valid any 1m;

	    #设置Web缓存的Key值，Nginx根据Key值md5哈希存储缓存。一般根据$host(域名)、$request_uri(请求的路径)等变量组合成proxy_cache_key
	    #proxy_cache_key "$host:$server_port$uri$is_args$args";

		root /root/myblog/img;
	}
	
	location /api/ {
		proxy_pass http://localhost:3000;
	}
	
	location ~ \.html {
		root /root/myblog/html;
	}
	
	location ~ \.js {
		root /root/myblog/js;
	}
	
	location ~ \.css {
		root /root/myblog/css;
	}
	
	location ~ \.(otf|eot|svg|ttf|woff|woff2) {
		root /root/myblog/fonts;
	}
	
	location / {
		root /root/myblog/;
		
		#默认文件，顺序从左到右
		#index index.html index.htm;
	}

	#location /wrong {
	#	retrun 404;
	#}

	#location /moved {
	#	return 301 http://localhost/index.html;
	#}

	#location /users/ {
	#	rewrite ^/users/(.*)$ /show?user=$1 break;
	#}
	
	#location /old/path.html {
	#	error_page 404 =301 http:localhost/new/path.html;
	#}

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}

